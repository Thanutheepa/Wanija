@page "/"
@inject NavigationManager Navigation
@inject ILocalStorageService localStore
@inject IJSRuntime JSRuntime
@inject IApiService apiService

<div id="auth">

    <div class="row h-100">
        <div class="col-lg-5 col-12">
            <div id="auth-left">
                <div class="fullCon">
                    <h1 class="auth-title mb-5">Login</h1>

                    <div class="form-group position-relative has-icon-left mb-4" @onclick = "HandleLogin">
                        <input @bind-value="userName" name="username" type="text" class="form-control form-control-xl" placeholder="Username" @onkeydown="@Enter">
                        <div class="form-control-icon">
                            <i class="bi bi-person"></i>
                        </div>
                    </div>
                    <div class="form-group position-relative has-icon-left mb-4">
                        <input @bind-value="password" name="pwd" type="password" class="form-control form-control-xl" placeholder="Password" @onkeydown="@Enter">
                        <div class="form-control-icon">
                            <i class="bi bi-shield-lock"></i>
                        </div>
                    </div>
                    @*<div class="form-check form-check-lg d-flex align-items-end">
                        <input class="form-check-input me-2" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label text-gray-600" for="flexCheckDefault">
                            Keep me logged in
                        </label>
                    </div>*@
                    <button @onclick="HandleLogin" class="btn btn-primary btn-block btn-lg shadow-lg mt-5 btnLogin">Log in</button>

                    <div class="text-center mt-5 text-lg">
                        @*                   <p class="text-gray-600">
                                Don't have an account? <a href="auth-register.html"
                                                          class="font-bold ">
                                    Sign
                                    up
                                </a>
                            </p>*@
                        @*<p><a class="font-bold" href="auth-forgot-password.html">Forgot password?</a></p>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-7 d-none d-lg-block">
            <div id="auth-right">
                <img src="images/logo/wanija-logo-b.png" alt="Logo" class="logo">
            </div>
        </div>
    </div>

</div>




@code {

    public string userName { get; set; }
    public string password { get; set; }
    private bool Identified = false;
    private bool loginError = false;
    private bool loginStatus = true;
    private AdminLogin user = new AdminLogin();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            user = await localStore.GetItemAsync<AdminLogin>("user");
            if (user != null)
                Navigation.NavigateTo("/categories");
            StateHasChanged();
        }
    }

    protected async void HandleLogin()
    {

        if (userName == null || userName == string.Empty || password == string.Empty || password == null)
        {
            loginStatus = false;
            await JSRuntime.InvokeAsync<object>("Alert", "error", "", "Email and Password is required. Please fill all the fields!");
        }
        else
        {
            loginStatus = true;
            var logincustomer = Task.Run(async () => await apiService.LoginUser(userName, password));
            user = logincustomer.Result;

            if (user.ID != 0 && (user.UserType == 9 || user.UserType == 4))
            {
                userName = "";
                password = "";
                // user = login.LoginUser(user);
                SaveLogin(user);
                Navigation.NavigateTo("/categories");
            }

            else
            {
                loginStatus = false;
                userName = "";
                password = "";
                await JSRuntime.InvokeAsync<object>("Alert", "error", "", "Invalid email or password. Please enter correct email and password!");
            }

        }
    }

    public async void SaveLogin(AdminLogin user)
    {
        await localStore.SetItemAsync("user", user);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            HandleLogin();
        }
    }
}
