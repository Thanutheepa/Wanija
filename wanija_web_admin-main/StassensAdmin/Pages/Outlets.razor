@page "/outlets"

@inject IJSRuntime JSRuntime

<SideMenu activeValue="outlets" />

<div id="main">
    <header class="mb-3">
        <button class="btn sidenavOpen burger-btn d-block d-xl-none">
            <i class="bi bi-justify fs-3"></i>
        </button>
    </header>

    <div class="page-heading">

        <div class="page-title">
            <div class="row">
                <div class="col-12 col-md-6 order-md-1 order-last">
                    <h3>Outlets</h3>
                </div>
                <div class="col-12 col-md-6 order-md-2 order-first">
                    <nav aria-label="breadcrumb" class="breadcrumb-header float-start float-lg-end">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/">Dashboard</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Outlets</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>

        <section id="multiple-column-form">
            <div class="row match-height">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            @if (isUpdate)
                            {
                                <h4 class="card-title">Update Item</h4>
                            }
                            else
                            {
                                <h4 class="card-title">New Item</h4>
                            }
                        </div>

                        <div class="card-content">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm">SKU Code <span class="text-danger">*</span></label></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><input type="text" class="form-control form-control-sm" @bind-value="sku"></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm">Item Name <span class="text-danger">*</span></label></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><input type="text" class="form-control form-control-sm" @bind-value="name"></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm">Description</label></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><textarea class="form-control" @bind="description"></textarea></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm">Selling Price <span class="text-danger">*</span></label></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><input type="text" class="form-control form-control-sm" @bind-value="sellingPrice"></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm">Image <span class="text-danger">*</span></label></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><input type="text" class="form-control form-control-sm" @bind-value="sellingPrice"></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm">Category <span class="text-danger">*</span></label></div>
                                    </div>
                                    <div class="col-md-3 col-12">
                                        <div class="form-group">
                                            <RadzenDropDown AllowClear="true" TValue="string" Class="w-100" Change=@(args => OnChange(args, "DropDown")) />
                                        </div>
                                        @foreach (var cat in selectedCats)
                                        {
                                            <div class="row">
                                                <div class="col-10">
                                                    cat
                                                </div>
                                                <div class="col-2">
                                                    <button class="btn btn-danger delBtn" @onclick="() => DelCat(cat)"><i class="fas fa-times"></i></button>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-3 col-12">
                                        <div class="form-group"><label class="form-control-sm"></label></div>
                                    </div>
                                    <div class="col-md-3 col-12 justify-content-end">
                                        @if (isUpdate)
                                        {
                                            <button type="submit" class="btn btn-primary  me-1">Update</button>
                                        }
                                        else
                                        {
                                            <button type="submit" class="btn btn-primary  me-1">Save</button>
                                        }
                                        <button type="reset" class="btn btn-light-secondary ">Reset</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card-header">
                            <h4 class="card-title">Existing Items</h4>
                        </div>

                        <div class="card-content">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-sm-12 my-2">
                                        @*   <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" PageSize="5" AllowPaging="true" AllowSorting="true"
                                                                 Data="@functionList" TItem="Function" LogicalFilterOperator="LogicalFilterOperator.Or">
                                                <Columns>
                                                    <RadzenDataGridColumn TItem="Function" Property="Name" Title="System" />
                                                    <RadzenDataGridColumn TItem="Function" Property="Description" Title="Description" />
                                                    <RadzenDataGridColumn TItem="Function" Property="IsActive" Title="Active Status" />
                                                    <RadzenDataGridColumn TItem="Function" Title="Action" Context="function">
                                                        <Template>
                                                            <RadzenButton style="margin: 0 1rem 1rem 0" Click=@(args => Edit(function.FunctionID)) Text="Edit" ButtonStyle="ButtonStyle.Secondary" />
                                                        </Template>

                                                    </RadzenDataGridColumn>
                                                    <RadzenDataGridColumn TItem="Function" Title="Action" Context="function">
                                                        <Template>
                                                            <RadzenButton style="margin: 0 1rem 1rem 0" Click=@(args => Delete(function.FunctionID)) Text="Delete" ButtonStyle="ButtonStyle.Danger" />
                                                        </Template>

                                                    </RadzenDataGridColumn>
                                                </Columns>
                                            </RadzenDataGrid>*@
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>
            </div>
        </section>
    </div>

    <footer>
        <div class="clearfix mb-0 text-muted">
            <div class="float-start">
                <p>2021 &copy; MSL Admin</p>
            </div>
            <div class="float-end">
                <p>
                    Powered by <a href="http://melstasoft.com/">Bellvantage Pvt Litd</a>
                </p>
            </div>
        </div>
    </footer>
</div>


@code {

    private bool isUpdate { get; set; } = false;
    private string sku { get; set; }
    private string name { get; set; }
    private string description { get; set; }
    private string sellingPrice { get; set; }

    private List<string> selectedCats = new List<string>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //await JSRuntime.InvokeAsync<object>("Charts");
            await JSRuntime.InvokeAsync<object>("sidenavOpenClose");
            StateHasChanged();
        }
    }

    void OnChange(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
    }

    void DelCat(string cat)
    {

    }

}
